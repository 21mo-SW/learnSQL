--조인 예제
SELECT *
FROM CUSTOMER, ORDERS
WHERE CUSTOMER.CUSTID = ORDERS.CUSTID;

SELECT *
FROM CUSTOMER, ORDERS
WHERE CUSTOMER.CUSTID = ORDERS.CUSTID
ORDER BY CUSTOMER.CUSTID;

SELECT NAME, SALEPRICE
FROM CUSTOMER, ORDERS
WHERE CUSTOMER.CUSTID = ORDERS.CUSTID;

SELECT NAME, SUM(SALEPRICE)
FROM CUSTOMER, ORDERS
WHERE CUSTOMER.CUSTID = ORDERS.CUSTID
GROUP BY CUSTOMER.NAME;


SELECT CUSTOMER.NAME, BOOK.BOOKNAME
FROM CUSTOMER, ORDERS, BOOK
WHERE CUSTOMER.CUSTID = ORDERS.CUSTID
    AND ORDERS.BOOKID = BOOK.BOOKID;
    
SELECT CUSTOMER.NAME, BOOK.BOOKNAME
FROM CUSTOMER, ORDERS, BOOK
WHERE CUSTOMER.CUSTID = ORDERS.CUSTID AND ORDERS.BOOKID = BOOK.BOOKID
    AND BOOK.PRICE = 20000;
    
SELECT CUSTOMER.NAME, ORDERS.SALEPRICE
FROM CUSTOMER, ORDERS
WHERE CUSTOMER.CUSTID = ORDERS.CUSTID(+);

SELECT BOOKNAME
FROM BOOK
WHERE PRICE = (SELECT MAX(PRICE)
               FROM BOOK);
               
SELECT NAME
FROM CUSTOMER
WHERE CUSTID IN(SELECT CUSTID
                FROM ORDERS);
                
SELECT NAME
FROM CUSTOMER
WHERE CUSTID IN(SELECT CUSTID
                FROM ORDERS
                WHERE BOOKID IN(SELECT BOOKID
                                FROM BOOK
                                WHERE PUBLISHER = '대한미디어'));
                                
SELECT B1.BOOKNAME
FROM BOOK B1
WHERE B1.PRICE > (SELECT AVG(B2.PRICE)
                  FROM BOOK B2
                  WHERE B2.PUBLISHER = B1.PUBLISHER);
                  
SELECT NAME
FROM CUSTOMER
MINUS
SELECT NAME
FROM CUSTOMER
WHERE CUSTID IN(SELECT CUSTID
                FROM ORDERS);
                
SELECT NAME, ADDRESS
FROM CUSTOMER CS 
WHERE EXISTS (SELECT *
              FROM ORDERS OD
              WHERE CS.CUSTID = OD.CUSTID);
              
--T01_3장_SQL+기초   슬라이드 58P 문제들
--박지성이 구매한 도서의 출판사 수
SELECT COUNT(PUBLISHER)
FROM CUSTOMER, BOOK, ORDERS
WHERE CUSTOMER.CUSTID = ORDERS.CUSTID 
    AND ORDERS.BOOKID = BOOK.BOOKID AND NAME = '박지성';
    
--박지성이 구매한 도서의 이름, 가격, 정가와 판매가격의 차이
SELECT BOOKNAME, PRICE, (BOOK.PRICE-ORDERS.SALEPRICE) AS "정가-판매"
FROM CUSTOMER, BOOK, ORDERS
WHERE CUSTOMER.CUSTID = ORDERS.CUSTID 
    AND ORDERS.BOOKID = BOOK.BOOKID AND NAME = '박지성';

--박지성이 구매하지 않은 도서의 이름   IN, NOT IN, EXISTS활용도 해보기
SELECT BOOKNAME
FROM CUSTOMER, BOOK, ORDERS
MINUS 
SELECT BOOKNAME
FROM CUSTOMER, BOOK, ORDERS
WHERE CUSTOMER.CUSTID = ORDERS.CUSTID 
    AND ORDERS.BOOKID = BOOK.BOOKID AND NAME = '박지성';
    
--주문하지 않은 고객의 이름(조인사용)
SELECT DISTINCT CUSTOMER.NAME
FROM CUSTOMER, ORDERS
MINUS 
SELECT DISTINCT CUSTOMER.NAME
FROM CUSTOMER, ORDERS
WHERE CUSTOMER.CUSTID = ORDERS.CUSTID;

SELECT NAME 
FROM CUSTOMER
WHERE NAME NOT IN (SELECT DISTINCT NAME
                    FROM CUSTOMER, ORDERS
                    WHERE CUSTOMER.CUSTID = ORDERS.CUSTID);
                    
SELECT NAME 
FROM CUSTOMER
WHERE NOT EXISTS (SELECT DISTINCT NAME
                    FROM ORDERS
                    WHERE CUSTOMER.CUSTID = ORDERS.CUSTID);

--주문 금액의 총액과 주문의 평균 금액
SELECT SUM(SALEPRICE) 총액, AVG(SALEPRICE) 평균액
FROM ORDERS;

--고객의 이름과 고객별 구매액
SELECT NAME, SUM(SALEPRICE)
FROM CUSTOMER C, ORDERS O
WHERE C.CUSTID = O.CUSTID
GROUP BY NAME;

--고객의 이름과 고객이 구매한 도서 목록
SELECT NAME, BOOKNAME
FROM CUSTOMER, BOOK, ORDERS
WHERE CUSTOMER.CUSTID = ORDERS.CUSTID 
    AND ORDERS.BOOKID = BOOK.BOOKID;

--도서의 가격(BOOK테이블)과 판매가격(Orders테이블)의 차이가 가장 많은 주문
SELECT ORDERS.*
FROM BOOK, ORDERS
WHERE ORDERS.BOOKID = BOOK.BOOKID AND (PRICE-SALEPRICE) =
    (SELECT MAX(PRICE-SALEPRICE)
     FROM BOOK, ORDERS
     WHERE BOOK.BOOKID = ORDERS.BOOKID);

--도서의 판매액 평균보다 자신의 구매액 평균이 더 높은 고객의 이름
SELECT NAME
FROM ORDERS, CUSTOMER
WHERE ORDERS.CUSTID = CUSTOMER.CUSTID
GROUP BY NAME
HAVING AVG(SALEPRICE) > (SELECT AVG(SALEPRICE) FROM ORDERS);

select name 
from (select name, avg(saleprice) avg
        from orders o, customer c
        where o.custid = c.custid 
        group by name) B
where b.avg > (select avg(saleprice) from orders);

